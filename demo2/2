Web Component model using declaritive syntax and a template imported via HTMLimports

<element name="app-todo" constructor="Todo">
  <template>
    <div class="title"></div>
    <input type="checkbox" class="completed">
  </template>
  <script>

    if (this != window){

      var content = this.querySelector('template').content;

      xtag.register(this, {
        lifecycle: {
          created: function{
            this.innerHTML = content.cloneNode(true);
            this.title = this.title;
            this.completed = this.completed;
          }
        },
        events: {
          'change': function(){
            //do something when checkbox is changed
          }
        },
        accessors: {
          title: {
            attribute: {},
            set: function(value){
              this.querySelector('.title').innerHTML = value;
            }
          },
          completed: {
            attribute: {},
            set: function(value){
              var completed = this.querySelector('.completed');
              if (value) {
                completed.setAttribute('checked','') ;
              } else {
                completed.removeAttribute('checked');
              }
            },
            get: function(){
              return (this.getAttribute('completed') == "true");
            }
          }
        }
      });
    }

  </script>
</element>

var todo = new Todo();   // this is an html element
todo.title = 'Hello';
todo.setAttribute('completed', true);
OR
todo.completed = true;

// throw it into the DOM, but it doesn't have a visual representation yet
body.appendChild(todo);

<body>
  <app-todo title="Hello" completed="true">
    <div class="title">Hello</div>
    <input type="checkbox" checked class="completed">
  </app-todo>
</body>

